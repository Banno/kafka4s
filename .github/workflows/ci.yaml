name: CI
on: [push, pull_request]
env:
  CI: true
  CI_SNAPSHOT_RELEASE: +publishSigned
  SCALA_VERSION: 2.13.5
jobs:
  validate:
    name: Scala ${{ matrix.scala }}, Java ${{ matrix.java }}
    if: "!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # java: [adopt@1.8.0-272, adopt@1.11.0-9, adopt@1.15.0-1]
        java: [adopt@1.11.0-9]
        scala: [2.13.5]
    env:
      SCALA_VERSION: ${{ matrix.scala }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Coursier
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}
      - name: Check copyright headers
        run: sbt ++$SCALA_VERSION headerCheck
      - name: Compile
        run: sbt ++$SCALA_VERSION test:compile
      - name: Check compatibility
        run: sbt ++$SCALA_VERSION mimaReportBinaryIssues
      - name: Start docker-compose
        run: docker-compose up -d
      - name: Test
        run: sbt ++$SCALA_VERSION test
      - name: Scaladoc
        run: sbt ++$SCALA_VERSION doc
  docs:
    name: Doc Site
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
      - name: Cache Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install Jekyll
        run: |
          gem install bundler
          bundle install --gemfile=site/Gemfile
      - name: Start docker-compose
        run: docker-compose up -d
      - name: Build project site
        run: sbt ++$SCALA_VERSION site/makeMicrosite
